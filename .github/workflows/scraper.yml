name: OptiBot Daily Scraper

on:
  schedule:
    # Runs daily at 9:00 AM UTC (4:00 PM Vietnam)
    - cron: "0 9 * * *"

  # Allow manual trigger
  workflow_dispatch:

jobs:
  scrape:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create config from environment (if assistant exists)
        run: |
          if [ -n "${{ secrets.OPTIBOT_ASSISTANT_ID }}" ]; then
            echo "Creating config from saved assistant ID..."
            cat > optibot_config.json << EOF
          {
            "assistant_id": "${{ secrets.OPTIBOT_ASSISTANT_ID }}",
            "vector_store_id": "${{ secrets.OPTIBOT_VECTOR_STORE_ID }}",
            "last_upload": "$(date -u +"%Y-%m-%dT%H:%M:%S.%fZ")",
            "source": "github_secrets"
          }
          EOF
            echo "Previous config found - will reuse assistant: ${{ secrets.OPTIBOT_ASSISTANT_ID }}"
          else
            echo "No assistant ID in secrets - will create new assistant"
          fi

      - name: Run OptiBot scraper
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ZS_SUBDOMAIN: optisignshelp
        run: |
          python main.py

      - name: Extract assistant info for secrets update
        run: |
          if [ -f "optibot_config.json" ]; then
            echo "=== CONFIG FILE CONTENT ==="
            cat optibot_config.json
            echo "=========================="
            
            # Extract assistant_id and vector_store_id
            ASSISTANT_ID=$(cat optibot_config.json | grep -o '"assistant_id": "[^"]*"' | cut -d'"' -f4)
            VECTOR_STORE_ID=$(cat optibot_config.json | grep -o '"vector_store_id": "[^"]*"' | cut -d'"' -f4)
            
            echo "Assistant ID: $ASSISTANT_ID"
            echo "Vector Store ID: $VECTOR_STORE_ID"
            
            # Save to output for next step
            echo "ASSISTANT_ID=$ASSISTANT_ID" >> $GITHUB_ENV
            echo "VECTOR_STORE_ID=$VECTOR_STORE_ID" >> $GITHUB_ENV
            
            echo "⚠️  MANUAL ACTION REQUIRED:"
            echo "To enable assistant reuse, add these GitHub Secrets:"
            echo "Repository → Settings → Secrets → Actions"
            echo "OPTIBOT_ASSISTANT_ID = $ASSISTANT_ID"
            echo "OPTIBOT_VECTOR_STORE_ID = $VECTOR_STORE_ID"
          fi

      - name: Upload config backup
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: optibot-config-backup
          path: optibot_config.json
          retention-days: 90

      - name: Upload logs as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: scraper-logs-${{ github.run_number }}
          path: |
            *.log
            article_metadata.json
          retention-days: 30
